{
    "swagger": "2.0",
    "info": {
        "description": "API built with Fiber v2",
        "title": "FunBoard API",
        "contact": {
            "url": "https://github.com/aceberg/FunBoard"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/board": {
            "post": {
                "description": "Edit existing Board by ID or add new Board (if ID=0)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board"
                ],
                "summary": "Edit or add Board",
                "parameters": [
                    {
                        "description": "Board",
                        "name": "board",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Board"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/board/del/{id}": {
            "get": {
                "description": "Delete Board by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board"
                ],
                "summary": "Delete Board by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/board/{id}": {
            "get": {
                "description": "Get Board details by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board"
                ],
                "summary": "Get Board by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Board"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/boards": {
            "get": {
                "description": "Get IDs and Names of all Boards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board"
                ],
                "summary": "Get all Boards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BoardInfo"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/card": {
            "post": {
                "description": "Edit existing Card by ID or add new Card (if ID=0)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card"
                ],
                "summary": "Edit or add Card",
                "parameters": [
                    {
                        "description": "Card",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/card/del/{id}": {
            "get": {
                "description": "Delete Card by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card"
                ],
                "summary": "Delete Card by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/column": {
            "post": {
                "description": "Edit existing Column by ID or add new Column (if ID=0)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "column"
                ],
                "summary": "Edit or add Column",
                "parameters": [
                    {
                        "description": "Column",
                        "name": "column",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Column"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/column/del/{id}": {
            "get": {
                "description": "Delete Column by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "column"
                ],
                "summary": "Delete Column by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Column ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/column/props": {
            "post": {
                "description": "Edit Column Properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "column"
                ],
                "summary": "Edit Column Properties",
                "parameters": [
                    {
                        "description": "Column Props",
                        "name": "props",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ColumnProps"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/conf": {
            "get": {
                "description": "Get app Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Get app Config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Conf"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "description": "Save app Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Save app Config",
                "parameters": [
                    {
                        "description": "App config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Conf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/subtask": {
            "post": {
                "description": "Edit existing Subtask by ID or add new Subtask (if ID=0)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subtask"
                ],
                "summary": "Edit or add Card Subtask",
                "parameters": [
                    {
                        "description": "Subtask",
                        "name": "subtask",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subtask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/subtask/del/{id}": {
            "get": {
                "description": "Delete Card Subtask by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subtask"
                ],
                "summary": "Delete Card Subtask by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subtask ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Board": {
            "type": "object",
            "properties": {
                "Columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Column"
                    }
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "models.BoardInfo": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "models.Card": {
            "type": "object",
            "properties": {
                "ColumnID": {
                    "type": "integer"
                },
                "DateCreated": {
                    "type": "string"
                },
                "DateMoved": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Sort": {
                    "type": "integer"
                },
                "Tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Subtask"
                    }
                },
                "Theme": {
                    "type": "string"
                }
            }
        },
        "models.Column": {
            "type": "object",
            "properties": {
                "BoardID": {
                    "type": "integer"
                },
                "Cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Card"
                    }
                },
                "Fold": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Props": {
                    "$ref": "#/definitions/models.ColumnProps"
                },
                "Sort": {
                    "type": "integer"
                }
            }
        },
        "models.ColumnProps": {
            "type": "object",
            "properties": {
                "ColumnID": {
                    "type": "integer"
                },
                "GroupByDate": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "integer"
                },
                "ShowDateCr": {
                    "type": "boolean"
                },
                "ShowDateMv": {
                    "type": "boolean"
                },
                "ShowID": {
                    "type": "boolean"
                }
            }
        },
        "models.Conf": {
            "type": "object",
            "properties": {
                "ConfPath": {
                    "type": "string"
                },
                "DBPath": {
                    "type": "string"
                },
                "DirPath": {
                    "type": "string"
                },
                "Host": {
                    "type": "string"
                },
                "Port": {
                    "type": "string"
                }
            }
        },
        "models.Subtask": {
            "type": "object",
            "properties": {
                "Checked": {
                    "type": "boolean"
                },
                "ColumnID": {
                    "type": "integer"
                },
                "ID": {
                    "type": "integer"
                },
                "Task": {
                    "type": "string"
                }
            }
        }
    }
}